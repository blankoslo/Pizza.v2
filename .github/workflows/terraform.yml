name: 'Terraform'

on:
  push:
    branches:
      - main

jobs:
  terraform-plan:
    name: 'Terraform-plan'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - name: Terraform Format
        id: fmt
        working-directory: ./infrastructure
        run: terraform fmt -check
      - name: Terraform Init
        id: init
        working-directory: ./infrastructure
        run: terraform init
      - name: Terraform Validate
        id: validate
        working-directory: ./infrastructure
        run: terraform validate -no-color
      - name: Terraform Plan
        id: plan
        working-directory: ./infrastructure
        run: terraform plan -no-color -input=false -out=${{ github.workspace }}/tfplanoutput/tf.plan
        continue-on-error: true
      - name: Terraform Plan Status
        if: steps.plan.outcome == 'failure'
        run: exit 1
  terraform-apply:
    name: 'Terraform-apply'
    runs-on: ubuntu-latest
    needs: terraform-plan
    environment: staging
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v1
        with:
          cli_config_credentials_token: ${{ secrets.TF_API_TOKEN }}
      - name: Download Build Artifact
        uses: actions/download-artifact@v3
        with:
          name: artifact
          path: ${{ github.workspace }}/tfplanoutput
      - name: Terraform Apply
        run: terraform apply tf.plan -auto-approve -input=false -no-color
