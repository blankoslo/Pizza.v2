{
  "global": {
    "by": "by"
  },
  "auth": {
    "refresh": {
      "expired": "Your session has expired, please log in again" 
    } 
  },
  "install": {
    "button": "Add to Slack",
    "successAlert": "App installed",
    "enterpriseInstallAlert": "We currently don't support enterprise workspaces. Sorry!",
    "genericErrorAlert": "Something went wrong."
  },
  "login": {
    "logo": "Pizzabot By",
    "loginButton": "Sign in with Slack",
    "installButton": "Add PizzaBot?",
    "error": {
      "401": "Something went wrong. Is your email verified?",
      "403": "Something went wrong. Is PizzaBot installed on your workspace?"
    }
  },
  "logout": "Logging you out...",
  "home": {
    "faq": {
      "title": "Frequently Asked Questions:",
      "question1": {
        "question": "How do i delete the app from my slack workspace?",
        "answer": "To remove Pizzabot from your workspace, you have to uninstall it through slack. Once the app has been uninstalled, ALL data associated with your workspace will be deleted, including all uploaded images.",
        "answer2": "You can check that the deletion was successful by logging out and in. If the workspace was successfully deleted then you won't be allowed to log back in."
      },
      "question2": {
        "question": "How do delete all data associated with my slack workspace and my account from pizzabot.",
        "answer": "To remove all data associated with your slack workspace and account from pizzabot, you need to uninstall Pizzabot from your workspace as explained above."
      },
      "question3": {
        "question": "I want to contact Pizzabot about something else. How can i do so?",
        "answer": "Please send us an email named \"Pizzabot - [question]\", you can find Blank's contact information over at"
      }
    }
  },
  "header": {
    "logo": "Pizzabot Administration",
    "pages": {
      "home": {
        "name": "home",
        "link": "/"
      },
      "restaurants": {
        "name": "restaurants",
        "link": "/restaurants"
      },
      "events": {
        "name": "events",
        "link": "/events"
      },
      "users": {
        "name": "users",
        "link": "/users"
      },
      "images": {
        "name": "images",
        "link": "/images"
      },
      "groups": {
        "name": "groups",
        "link": "/groups"
      }
    },
    "settings": {
      "logout": {
        "name": "logout",
        "link": "/logout"
      }
    }
  },
  "footer": {
    "logo": "Pizzabot By"
  },
  "infinityLoadingList": {
    "loading": "Loading...",
    "end": "End of list."
  },
  "invitations": {
    "update": {
      "validation": {
        "rsvp": {
          "required": "answer is required"
        }
      },
      "mutation": {
        "onSuccess": "New answer registered",
        "onError": "Failed to register new answer"
      }
    },
    "list": {
      "invitedAt": "Invited at:",
      "remindedAt": "Reminded at:"
    }
  },
  "users": {
    "list": {
      "title": "List of Users",
      "card": {
        "username": "Username:",
        "email": "Email:",
        "joined": "Joined:",
        "noEmail": "N/A",
        "priority": "Priority",
        "active": "Active"
      },
      "noResults": "No users found"
    },
    "update": {
      "mutation": {
        "onSuccess": "Update of user was successful",
        "onError": "Update of user failed"
      }
    }
  },
  "events": {
    "new": {
      "datePicker": {
        "label": "Week picker",
        "inputFormat": "'Week of' MMM d"
      },
      "peoplePerEventInput": {
        "label": "Number of participants"
      },
      "mutation": {
        "onSuccess": "New event registered",
        "onError": "Failed to register event"
      },
      "errors": {
        "noSelectedDate": "You must choose a week before you can create an event",
        "noRestaurantsExists": "No restaurants exists in the system. Add a restaurant before you add a new event",
        "peoplePerEvent": "People per event must be between 2 and 100"
      },
      "title": "New Pizza Event üçï",
      "button": "Create"
    },
    "edit": {
      "mutation": {
        "onSuccess": "Event successfully changed",
        "onError": "Failed to change event"
      },
      "title": "Edit Pizza Event \uD83C\uDF55",
      "restaurantSelectLabel": "Restaurant",
      "buttons": {
        "save": "Save",
        "open": "Edit"
      }
    },
    "delete": {
      "button": "Delete",
      "confirmation": {
        "title": "Delete event",
        "content": {
          "line1": "Are you sure you want to delete this event? ",
          "line2": "This action cannot be undone."
        },
        "action": {
          "cancel": "Cancel",
          "accept": "Delete"
        }
      },
      "mutation": {
        "onSuccess": "Deletion of event was successful",
        "onError": "Deletion of event failed"
      }
    },
    "select": {
      "label": "Event"
    },
    "list": {
      "eventCard": {
        "extended": {
          "title": "NEXT PIZZAEVENT üçï"
        },
        "normal": {
          "place": "Pizza at " 
        },
        "peoplePerEventEnding": "people"
      },
      "futureEvents": {
        "title": "Future Events üçï"
      },
      "pastEvents": {
        "title": "Past Events üçï"
      },
      "deletedRestaurant": "N/A (Restaurant deleted from system)",
      "newEventButton": "New Event",
      "noResults":"No events found",
      "group": "Group"
    }
  },
  "restaurants": {
    "new": {
      "title": "New Restaurant",
      "validation": {
        "name": {
          "min": "The name must be at least 1 letters long",
          "required": "Name is required"
        }
      },
      "mutation": {
        "onSuccess": "New restaurant registered",
        "onError": "Failed to register restaurant"
      },
      "form": {
        "name": "Restaurant name",
        "link": "Restaurant link",
        "tlf": "Restaurant phone number",
        "address": "Restaurant address",
        "button": "Create"
      }
    },
    "select": {
      "label": "Restaurant"
    },
    "list": {
      "title": "List of Restaurants",
      "noResults": "No restaurants found",
      "optionalValue": "N/A",
      "entry": {
        "name": "Name",
        "link": "Link",
        "tlf": "Phone number",
        "address": "Address"
      },
      "confirmation": {
        "title": "Delete resturant",
        "content": {
          "line1": "Are you sure you want to delete this resturant? ",
          "line2": "This action cannot be undone."
        },
        "action": {
          "cancel": "Cancel",
          "accept": "Delete"
        }
      },
      "newRestaurantButton": "New Restaurant",
      "rating": "No rating"
    },
    "delete": {
      "mutation": {
        "onSuccess": "Deletion of restaurant was successful",
        "onError": "Deletion of restaurant failed"
      }
    }
  },
  "groups": {
    "new": {
      "title": "New Group",
      "validation": {
        "name": {
          "min": "The name must be at least 1 letters long",
          "required": "Name is required"
        }
      },
      "mutation": {
        "onSuccess": "New group registered",
        "onError": "Failed to register group"
      },
      "form": {
        "name": "Group name",
        "button": "Create"
      }
    },
    "usersSelect": {
      "label": "Group Members"
    },
    "groupSelect": {
      "placeholder": "Group",
      "label": "Invitation group (only users from this group will get invited)"
    },
    "list": {
      "title": "List of Groups",
      "noResults": "No groups found",
      "optionalValue": "N/A",
      "entry": {
        "name": "Name",
        "numberOf": "members"
      },
      "confirmation": {
        "title": "Delete group",
        "content": {
          "line1": "Are you sure you want to delete this group? ",
          "line2": "This action cannot be undone."
        },
        "action": {
          "cancel": "Cancel",
          "accept": "Delete"
        }
      },
      "newGroupButton": "New Group"
    },
    "delete": {
      "mutation": {
        "onSuccess": "Deletion of group was successful",
        "onError": "Deletion of group failed"
      }
    },
    "edit": {
      "mutation": {
        "onSuccess": "Group successfully changed",
        "onError": "Failed to change group"
      },
      "title": "Edit group",
      "form": {
        "name": "Group name",
        "buttons": {
          "save": "Save",
          "open": "Edit"
        }
      }
    }
  }
}
